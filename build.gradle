plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

// ADDED as source of plugins
repositories {
  mavenCentral()
}

group = 'org.fabianlee'
version = '1.0.0'
sourceCompatibility = '17'

// ADDED want consistent name for jar
bootJar {
  archiveFileName = "springBoot.jar"
}

// ADDED ability to specify docker owner and version on command line
ext.dockerOwner = project.hasProperty('dockerOwner') ? project.getProperty('dockerOwner'):'fabianlee'
ext.dockerVersion = project.hasProperty('dockerVersion') ? project.getProperty('dockerVersion'):'1.0.0'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}


task copyDockerfile(type: Copy) {
  from 'src/main/resources/Dockerfile'
  into 'build/libs'
}

ext.ownerProject = "${dockerOwner}/${project.name}"

// ADDED build OCI image using Docker
task docker(type: Exec) {
    group "OCI"
    dependsOn bootJar
    dependsOn copyDockerfile
    workingDir "${buildDir}/libs"
    commandLine "docker", "build", "-f", "Dockerfile", "-t", "${ownerProject}:${dockerVersion}", "-t", "${ownerProject}:latest", "."
}

// ADDED build OCI image using Podman
task buildah(type: Exec) {
    group "OCI"
    dependsOn bootJar
    dependsOn copyDockerfile
    workingDir "${buildDir}/libs"
    commandLine "buildah", "bud", "-f", "Dockerfile", "-t", "${ownerProject}:latest", "-t", "docker.io/${ownerProject}:latest","-t", "docker.io/${ownerProject}:${dockerVersion}","-t","ghcr.io/${ownerProject}:latest","-t","ghcr.io/${ownerProject}:${dockerVersion}", "."
//    doLast {
//      exec {
//        commandLine "buildah", "tag", "localhost/${dockerOwner}/${project.name}:latest", "docker.io/${dockerOwner}/${project.name}:latest"
//      }
//    }
}

